define("SINGLE/common/url.hash.js",["SINGLE/base/base","SINGLE/base/object"],function(require,t,i){function e(t){var i=[];return s.each(t,function(t,e){i.push(encodeURIComponent(e)+"="+encodeURIComponent(t))}),i.join("&")}var s=require("SINGLE/base/base"),h=require("SINGLE/base/object"),n=/^(?:([^:\/!?&=|]+):)?([^!?&|]+)?(?:!([^!?&|]+))?(?:\?((?:[^?=&|]+=[^?=&|]*(?:&[^?=&|]+=[^?=&|]*)*)?))?((?:\|[^|]+)*)?$/i,r=/([^=&]*)=([^=&]*)/g,u=h.extend({propertys:function(){this.frame="",this.view="",this.path=[],this.query={},this.ids=[],this.fullhash=""},initialize:function(t){var i=s.type(t);"object"===i?s.mix(this,t):"string"===i&&s.mix(this,u.parse(t))},setFrame:function(t){return t?(this.frame=t,this):this},getFrame:function(){return this.frame},setView:function(t){return t?(this.view=t,this):this},getView:function(){return this.view},setPath:function(t,i){return i?(0>t&&(t=0),t>this.path.length&&(t=this.path.length),this.path[t]=i,this):this},getPath:function(t){return this.path[t]},delPath:function(t){return 0>t||t>=this.path.length?this:(this.path.splice(t,1),this)},setQuery:function(t,i){return t&&i?(this.query[t]=i,this):this},getQuery:function(t){return t?this.query[t]:void 0},delQuery:function(t){return delete this.query[t],this},setId:function(t){return this.exsitId(t)||this.ids.push(t),this},delId:function(t){var i=this.ids.indexOf(t);return i>-1&&this.ids.splice(i,1),this},exsitId:function(t){return this.ids.indexOf(t)>-1},getFullHash:function(){return fullhash},buildUrl:function(){var t=[];return this.frame&&(t.push(this.frame),t.push(":")),this.view&&t.push(this.view),this.path&&this.path.length&&(t.push("!"),t.push(this.path.join("/"))),s.isEmpty(this.query)||(t.push("?"),t.push(e(this.query))),this.ids&&this.ids.length&&(t.push("|"),t.push(this.ids.join("|"))),t.join("")},clone:function(){var t=new u;return s.mix(t,this,!0)},toString:function(){return this.buildUrl()},valueOf:function(){return s.mix({},this)}});return u.parse=function(t){var i=(t||"").replace(/^#+/,"");return m=i.match(n)||[],frame=m[1],view=m[2],path=(m[3]||"").replace(/^\/+|\/+$/,""),paths=path?path.split("/"):[],query=m[4],querys=function(t){var i={};return t.replace(r,function(t,e,s){i[e]=s}),i}(query||""),id=(m[5]||"").replace(/^\|+|\|+$/,""),ids=id?id.split("|"):[],{frame:frame,view:view,path:paths,query:querys,ids:ids,fullhash:i}},u});